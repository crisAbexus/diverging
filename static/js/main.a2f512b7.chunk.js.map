{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["URL","App","useState","data","setData","useEffect","a","typeRawValues","d","fy","Date","currentAccountBalance","federalBalance","otherBalances","d3","console","log","loadData","svgRef","useD3","anchor","svg","xs","colors","domain","range","recessions","margin","line","x","timeScale","y","map","z","stack","keys","order","offset","append","selectAll","enter","attr","style","text","datum","r","classed","i","call","tickSize","tickPadding","node","drawChart","width","height","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a2f512b7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport * as d3 from \"d3\";\nimport { useD3 } from \"d3blackbox\";\nconst URL = 'https://gist.githubusercontent.com/caseylabrack/7dec76d3b4f05aec7e8b0bc1df04753b/raw/ec591a46b1340dc19b0f0ac20c0babbc632a4dd7/Savings-Investment-Balance.tsv'\n\nfunction drawChart(svg, data) {\n  const height = 400;\n  const width = 900;\n\n  const colors = d3.scaleOrdinal().domain([\"nonfederal\",\"federal\"]).range([\"#4A0000\",\"#DA7B3A\"]);\n\n  const recessions = [\n    [new Date(1953,7,1), new Date(1954,5,1)],\n    [new Date(1957,8,1), new Date(1958,4,1)],\n    [new Date(1960,4,1), new Date(1961,2,1)],\n    [new Date(1969,12,1), new Date(1970,11,1)],\n    [new Date(1973,11,1), new Date(1975,3,1)],\n    [new Date(1980,1,1), new Date(1980,7,1)],\n    [new Date(1981,7,1), new Date(1982,11,1)],\n    [new Date(1990,7,1), new Date(1991,3,1)],\n    [new Date(2001,3,1), new Date(2001,11,1)],\n    [new Date(2007,12,1), new Date(2009,6,1)],\n  ]\n\n  const margin = ({top: 15, bottom: 15, left: 20, right: 25})\n\n  const line = d3.line()\n    .x(d => timeScale(d.fy))\n    .y(d => y(d.currentAccountBalance))\n\n  const y = d3.scaleLinear()\n    .domain([-10, 8])\n    .range([height - margin.bottom, margin.top])\n\n  const timeScale = d3.scaleTime()\n    .domain([new Date(1949, 0, 1), d3.max(data.map(z => z.fy))])\n    .range([margin.left, width - margin.right])\n\n  const stacked = xs => stack(xs.map(datum => {\n    const r = {}\n    r.fy = datum.fy\n    r.federalBalance = datum.federalBalance\n    r.otherBalances = datum.otherBalances\n    return r\n  }))\n\n  const stack = d3.stack()\n    .keys([\"otherBalances\", \"federalBalance\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetDiverging)\n\n    svg.append('height', 1024)\n  \n    svg.selectAll(\"rect\") // for each recession, draw a rectangle\n      .data(recessions)\n      .enter().append(\"rect\")\n        .attr(\"x\", d => timeScale(d[0]))\n        .attr(\"y\", margin.top)\n        .attr(\"width\", d => timeScale(d[1])-timeScale(d[0]))\n        .attr(\"height\", height-margin.bottom-margin.top)\n        .style(\"fill\", \"#e1e1e1\")\n    \n    svg.append(\"line\") // zero baseline\n      .attr(\"x1\", timeScale.range()[0])\n      .attr(\"x2\", timeScale.range()[1])\n      .attr(\"y1\", y(0))\n      .attr(\"y2\", y(0))\n      .style(\"stroke\", \"rgb(75,75,75)\")\n    \n    svg.append(\"line\") // Actual/Projected line\n      .attr(\"x1\", timeScale(new Date(2017,5,1)))\n      .attr(\"x2\", timeScale(new Date(2017,5,1)))\n      .attr(\"y1\", y.range()[0])\n      .attr(\"y2\", y.range()[1] - 14)\n      .style(\"stroke\", \"rgb(75,75,75)\")\n      .style(\"stroke-dasharray\", \"2 2\")\n    \n    svg.append(\"text\") //Actual/Projected line label\n      .text(\"Actual\")\n      .attr(\"x\", timeScale(new Date(2017,5,1)) - 6)\n      .attr(\"y\", y.range()[1])\n      .style(\"text-anchor\", \"end\")\n      .style(\"font-size\", \".75em\")\n      .style(\"fill\", \"rgb(75,75,75)\")\n      .style(\"font-family\", \"sans-serif\")\n    \n    svg.append(\"text\") // Actual/Projected line label\n      .text(\"Projected\")\n      .attr(\"x\", timeScale(new Date(2017,5,1)) + 6)\n      .attr(\"y\", y.range()[1])\n      .style(\"text-anchor\", \"start\")\n      .style(\"font-size\", \".75em\")\n      .style(\"fill\", \"rgb(75,75,75)\")\n      .style(\"font-family\", \"sans-serif\")\n    \n    svg.append(\"text\") // label\n      .text(\"Nonfederal Domestic\")\n      .attr(\"x\", timeScale(new Date(2017,5,1)) + 10)\n      .attr(\"y\", y(3.25))\n      .style(\"text-anchor\", \"start\")\n      .style(\"font-size\", \".75em\")\n      .style(\"fill\", colors(\"nonfederal\"))\n      .style(\"font-family\", \"sans-serif\")\n      .style(\"font-weight\", \"700\")\n          .append(\"tspan\")\n            .text(\"Balance\")\n            .attr(\"dy\", \"1.2em\")\n            .attr(\"x\", timeScale(new Date(2017,5,1)) + 10)\n    \n    svg.append(\"text\") // label\n      .text(\"Federal Budget\")\n      .attr(\"x\", timeScale(new Date(2017,5,1)) + 10)\n      .attr(\"y\", y(-6.5))\n      .style(\"text-anchor\", \"start\")\n      .style(\"font-size\", \".75em\")\n      .style(\"fill\", colors(\"federal\"))\n      .style(\"font-family\", \"sans-serif\")\n      .style(\"font-weight\", \"700\")\n          .append(\"tspan\")\n            .text(\"Balance\")\n            .attr(\"dy\", \"1.2em\")\n            .attr(\"x\", timeScale(new Date(2017,5,1)) + 10)\n    \n    svg.append(\"text\") // label\n      .text(\"Current-Account Balance\")\n      .attr(\"x\", timeScale(new Date(2007,0,1)))\n      .attr(\"y\", y(-6.75))\n      .style(\"text-anchor\", \"start\")\n      .style(\"font-size\", \".75em\")\n      .style(\"fill\", \"black\")\n      .style(\"font-family\", \"sans-serif\")\n      .style(\"font-weight\", \"700\")\n      .style(\"text-anchor\", \"end\")\n    \n    const stacks = svg.selectAll(\".stacks\") // Create one group for each set of bars and color them\n      .data(stacked(data)) // transform the data with a diverging stack layout, then bind it with the groups\n      .enter().append(\"g\").classed(\"stacks\", true)\n        .style(\"fill\", (d,i) => colors.range()[i])\n    \n    stacks.selectAll(\"rect\") // For each group above, draw a rectangle for each data point\n      .data(d => d)\n      .enter().append(\"rect\")\n        .attr(\"x\", d => timeScale(d.data.fy) - 3)\n        .attr(\"y\", d => y(d[1]))\n        .attr(\"height\", d => y(d[0]) - y(d[1]))\n        .attr(\"width\", 6)\n    \n    svg.append(\"path\") // Draw the line chart\n      .datum(data)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"d\", line)\n    \n    svg.append(\"g\")\n      .call(d3.axisLeft(y).tickSize(-6).tickPadding(6))\n      .attr(\"transform\", `translate(${margin.left},0)`)\n    \n    svg.append(\"g\")\n      .call(d3.axisBottom(timeScale).tickSize(-6).tickPadding(6))\n      .attr(\"transform\", `translate(0,${height-margin.bottom})`)\n    \n    return svg.node()\n}\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    async function loadData() {\n      \n      const typeRawValues = d => {\n        d.fy = new Date(+d.fy, 0, 1)\n        d.currentAccountBalance = +d.currentAccountBalance\n        d.federalBalance = +d.federalBalance\n        d.otherBalances = +d.otherBalances\n        return d\n      }\n\n      const data = await d3.tsv(URL, d => typeRawValues(d));\n\n      console.log('App.js - data:');\n      console.log(data);\n\n      setData(data);\n    }\n    loadData(); \n  }, []);\n\n  const svgRef = useD3(anchor => {\n    if (data !== null) {\n      drawChart(d3.select(anchor), data);\n    }\n  });\n\n  return (\n    <svg width='1024' height='1024' ref={svgRef} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}